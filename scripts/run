#!/usr/bin/env bash
# run the service in one of different deployment modes
set -e #-x

usage() {
  echo "usage: $0 [-h|--help] LOCATION"
  echo ""
  echo "[-h|--help]      print this help text"
  echo ""
  echo "LOCATION is one of:"
  echo "- local            run as a local process"
  echo "- docker           run in a docker container"
}

# script variables and defaults
source $(dirname $0)/init.sh


# process command-line options (if any)
die() { log_error "$*" >&2; echo ""; usage; exit 2; }  # complain to STDERR and exit with error
needs_arg() { if [ -z "$OPTARG" ]; then die "No arg for --$OPT option"; fi; }

while getopts h-: OPT; do
  # support long options: https://stackoverflow.com/a/28466267/519360
  if [ "$OPT" = "-" ]; then   # long option: reformulate OPT and OPTARG
    OPT="${OPTARG%%=*}"       # extract long option name
    OPTARG="${OPTARG#$OPT}"   # extract long option argument (may be empty)
    OPTARG="${OPTARG#=}"      # if long option argument, remove assigning `=`
  fi
  case "$OPT" in
    h | help )     usage; exit 0 ;;
    \? )           usage; exit 2 ;;  # bad short option (error reported via getopts)
    * )            die "Illegal option --$OPT" ;;            # bad long option
  esac
done
shift $((OPTIND-1)) # remove parsed options and args from $@ list


# process positional arguments (if any)
LOCATION=${1}

run_tests() {
  cd "${ROOT_DIR}"
  ./gradlew ${GRADLE_OPTS} test jacocoTestReport

#./gradlew --build-cache srcclr
}

run_integration_tests() {
  # NOTE: interesting - no integration-tests.yml have been triggered or run
  # this is run via both:
  # - ./github/workflows/build-and-test.yml
  # - ./github/workflows/integration-tests.yml
  #
  # please see integration-tests.yml for more information re: inputs.environment and TEST_ENV
  TEST_ENV=${TEST_ENV:-local}

  cd "${ROOT_DIR}"
  ./gradlew ${GRADLE_OPTS} runTest \
    --args="suites/${TEST_ENV}/FullIntegration.json build/reports"

  # for developer runs, build an integration report locally
  if [ -z "$CI" ]; then
    log_debug "TODO: how do we build a report?"
  fi
}


run_local() {
  APP_LOGS="${TMP_DIR}/application.log"
  cd "$ROOT_DIR"
  ./gradlew ${GRADLE_OPTS} bootRun
#  echo "Application started. Logs are located at: ${APP_LOGS}"
#./gradlew --build-cache bootRun | tee application.log &
}

run_docker() {
  "$ROOT_DIR/scripts/build" docker
  docker compose -f "$ROOT_DIR/scripts/compose.yaml" up service -d
}

case "$LOCATION" in
  test )         run_tests ;;
  integration )  run_integration_tests ;;
  local )        run_local;;
  docker )       run_docker;;
  * )            usage; exit 2;
esac
